{"ast":null,"code":"import _objectSpread from \"/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/src/context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\"; // import Client from \"./Contentful\";\n\nconst PetContext = React.createContext();\n\nclass PetsProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pets: [],\n      sortedPets: [],\n      newPets: [],\n      loading: true,\n      type: \"all\",\n      age: \"0\",\n      minAge: 0,\n      maxAge: 0,\n      gender: \"all\",\n      breakfast: false,\n      typeDog: [],\n      typeCat: []\n    };\n\n    this.getPet = slug => {\n      let tempPets = [...this.state.pets];\n      const pet = tempPets.find(pet => pet.slug === slug);\n      return pet;\n    };\n\n    this.getPetType = type => {\n      let tempPetType = [...this.state.pets];\n      const petType = tempPetType.find(pet => pet.type === type);\n      return petType;\n    };\n\n    this.handleChange = event => {\n      const target = event.target; //const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n      const gender = event.target.gender;\n      const value = event.target.value;\n      const name = event.target.name;\n      console.log(\"this is \".concat(gender, \", this is value \").concat(name)); // this.setState(\n      //   {\n      //     [gender]: value\n      //   },\n      // );\n    };\n\n    this.filterPets = () => {\n      console.log(\"Hello filter pets\");\n    };\n  }\n\n  // getData\n  // getData = async () => {\n  //   try {\n  //     let response = await Client.getEntries({\n  //       content_type: \"beachResortRoom\",\n  //       // order: \"sys.createdAt\"\n  //       order: \"-fields.price\"\n  //     });\n  //     let rooms = this.formatData(response.items);\n  //     let featuredRooms = rooms.filter(room => room.featured === true);\n  //     let maxPrice = Math.max(...rooms.map(item => item.price));\n  //     let maxSize = Math.max(...rooms.map(item => item.size));\n  //     this.setState({\n  //       rooms,\n  //       featuredRooms,\n  //       sortedRooms: rooms,\n  //       loading: false,\n  //       price: maxPrice,\n  //       maxPrice,\n  //       maxSize\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  componentDidMount() {\n    // this.getData();\n    let pets = this.formatData(items);\n    let newPets = pets.filter(pet => pet.featured === true);\n    let typeDog = pets.filter(pet => pet.type === \"Dog\");\n    let typeCat = pets.filter(pet => pet.type === \"Cat\");\n    let maxAge = Math.max(...pets.map(item => item.age));\n    this.setState({\n      pets,\n      newPets,\n      typeDog,\n      typeCat,\n      sortedPets: pets,\n      loading: false,\n      age: maxAge,\n      maxAge\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let pet = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return pet;\n    });\n    return tempItems;\n  }\n\n  //   filterRooms = () => {\n  //     let {\n  //       rooms,\n  //       type,\n  //       capacity,\n  //       price,\n  //       minSize,\n  //       maxSize,\n  //       breakfast,\n  //       pets\n  //     } = this.state;\n  //     // all the rooms\n  //     let tempRooms = [...rooms];\n  //     // transform value\n  //     capacity = parseInt(capacity);\n  //     price = parseInt(price);\n  //     // filter by type\n  //     if (type !== \"all\") {\n  //       tempRooms = tempRooms.filter(room => room.type === type);\n  //     }\n  //     // filter by capacity\n  //     if (capacity !== 1) {\n  //       tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n  //     }\n  //     // filter by price\n  //     tempRooms = tempRooms.filter(room => room.price <= price);\n  //     // filter by size\n  //     tempRooms = tempRooms.filter(\n  //       room => room.size >= minSize && room.size <= maxSize\n  //     );\n  //     // filter by breakfast\n  //     if (breakfast) {\n  //       tempRooms = tempRooms.filter(room => room.breakfast === true);\n  //     }\n  //     // filter by pets\n  //     if (pets) {\n  //       tempRooms = tempRooms.filter(room => room.pets === true);\n  //     }\n  //     // change state\n  //     this.setState({\n  //       sortedRooms: tempRooms\n  //     });\n  //   };\n  render() {\n    return React.createElement(PetContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getPet: this.getPet,\n        getPetType: this.getPetType,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst PetsConsumer = PetContext.Consumer;\nexport function withPetsConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(PetsConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })));\n  };\n}\nexport { PetsProvider, PetsConsumer, PetContext };","map":{"version":3,"sources":["/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/src/context.js"],"names":["React","Component","items","PetContext","createContext","PetsProvider","state","pets","sortedPets","newPets","loading","type","age","minAge","maxAge","gender","breakfast","typeDog","typeCat","getPet","slug","tempPets","pet","find","getPetType","tempPetType","petType","handleChange","event","target","value","name","console","log","filterPets","componentDidMount","formatData","filter","featured","Math","max","map","item","setState","tempItems","id","sys","images","fields","image","file","url","render","props","children","PetsConsumer","Consumer","withPetsConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport items from \"./data\";\n// import Client from \"./Contentful\";\n\nconst PetContext = React.createContext();\n\nclass PetsProvider extends Component {\n  state = {\n    pets: [],\n    sortedPets: [],\n    newPets: [],\n    loading: true,\n    type: \"all\",\n    age: \"0\",\n    minAge: 0,\n    maxAge: 0,\n    gender: \"all\",\n    breakfast: false,\n    typeDog: [],\n    typeCat: [],\n  };\n  // getData\n  // getData = async () => {\n  //   try {\n  //     let response = await Client.getEntries({\n  //       content_type: \"beachResortRoom\",\n  //       // order: \"sys.createdAt\"\n  //       order: \"-fields.price\"\n  //     });\n  //     let rooms = this.formatData(response.items);\n  //     let featuredRooms = rooms.filter(room => room.featured === true);\n  //     let maxPrice = Math.max(...rooms.map(item => item.price));\n  //     let maxSize = Math.max(...rooms.map(item => item.size));\n\n  //     this.setState({\n  //       rooms,\n  //       featuredRooms,\n  //       sortedRooms: rooms,\n  //       loading: false,\n  //       price: maxPrice,\n  //       maxPrice,\n  //       maxSize\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  componentDidMount() {\n    // this.getData();\n    let pets  = this.formatData(items);\n    let newPets = pets.filter(pet => pet.featured === true);\n    let typeDog = pets.filter(pet => pet.type === \"Dog\");\n    let typeCat = pets.filter(pet => pet.type === \"Cat\");\n    let maxAge = Math.max(...pets.map(item => item.age));\n\n    this.setState({\n      pets, \n      newPets,\n      typeDog,\n      typeCat,\n      sortedPets: pets,\n      loading: false,\n      age: maxAge,\n      maxAge,\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let pet = { ...item.fields, images, id };\n      return pet;\n    });\n    return tempItems;\n  }\n  getPet = slug => {\n    let tempPets = [...this.state.pets];\n    const pet = tempPets.find(pet => pet.slug === slug);\n    return pet;\n  };\n  getPetType = type => {\n    let tempPetType = [...this.state.pets];\n    const petType = tempPetType.find(pet => pet.type === type);\n    return petType;\n  }\n  handleChange = event => {\n    const target = event.target;\n    //const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const gender = event.target.gender;\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(`this is ${gender}, this is value ${name}`);\n\n    // this.setState(\n    //   {\n    //     [gender]: value\n    //   },\n    // );\n  };\n  filterPets = () =>{\n    console.log(\"Hello filter pets\");\n  }\n//   filterRooms = () => {\n//     let {\n//       rooms,\n//       type,\n//       capacity,\n//       price,\n//       minSize,\n//       maxSize,\n//       breakfast,\n//       pets\n//     } = this.state;\n//     // all the rooms\n//     let tempRooms = [...rooms];\n//     // transform value\n//     capacity = parseInt(capacity);\n//     price = parseInt(price);\n\n//     // filter by type\n//     if (type !== \"all\") {\n//       tempRooms = tempRooms.filter(room => room.type === type);\n//     }\n\n//     // filter by capacity\n//     if (capacity !== 1) {\n//       tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n//     }\n//     // filter by price\n//     tempRooms = tempRooms.filter(room => room.price <= price);\n//     // filter by size\n//     tempRooms = tempRooms.filter(\n//       room => room.size >= minSize && room.size <= maxSize\n//     );\n//     // filter by breakfast\n//     if (breakfast) {\n//       tempRooms = tempRooms.filter(room => room.breakfast === true);\n//     }\n//     // filter by pets\n//     if (pets) {\n//       tempRooms = tempRooms.filter(room => room.pets === true);\n//     }\n//     // change state\n//     this.setState({\n//       sortedRooms: tempRooms\n//     });\n//   };\n render() {\n    return (\n      <PetContext.Provider\n       value={{\n         ...this.state,\n           getPet: this.getPet,\n           getPetType: this.getPetType,\n           handleChange: this.handleChange\n         }}\n       >\n         {this.props.children}\n       </PetContext.Provider>\n     );\n   }\n}\n\n const PetsConsumer = PetContext.Consumer;\n\nexport function withPetsConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <PetsConsumer>\n        {value => <Component {...props} context={value} />}\n      </PetsConsumer>\n    );\n  };\n}\n\nexport { PetsProvider, PetsConsumer, PetContext };\n"]},"metadata":{},"sourceType":"module"}