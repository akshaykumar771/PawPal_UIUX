{"ast":null,"code":"import _objectSpread from \"/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/src/context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\"; //import Client from \"./Contentful\";\n\nconst PetContext = React.createContext();\n\nclass PetsProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pets: [],\n      sortedPets: [],\n      newPets: [],\n      loading: true,\n      type: \"all\",\n      age: \"0\",\n      minAge: 0,\n      maxAge: 0,\n      gender: \"all\",\n      breakfast: false,\n      typeDog: [],\n      typeCat: []\n    };\n\n    this.getPet = id => {\n      let tempPets = [...this.state.pets];\n      const pet = tempPets.find(pet => pet.id === id);\n      return pet;\n    };\n\n    this.getPetType = type => {\n      let tempPetType = [...this.state.pets];\n      const petType = tempPetType.find(pet => pet.type === type);\n      return petType;\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterPets);\n    };\n\n    this.filterPets = () => {\n      let _this$state = this.state,\n          pets = _this$state.pets,\n          gender = _this$state.gender,\n          age = _this$state.age;\n      let tempPets = [...pets];\n\n      if (gender !== \"all\") {\n        tempPets = tempPets.filter(pet => pet.gender === gender);\n      }\n\n      tempPets = tempPets.filter(pet => pet.age <= age);\n      let typeDogTemp = tempPets.filter(pet => pet.type === \"Dog\");\n      let typeCatTemp = tempPets.filter(pet => pet.type === \"Cat\");\n      this.setState({\n        typeDog: typeDogTemp,\n        typeCat: typeCatTemp\n      });\n    };\n  }\n\n  //------------------contentful----------\n  // getData = async () => {\n  //   try {\n  //     let response = await Client.getEntries({\n  //       content_type: \"pawpal1\",\n  //       // order: \"sys.createdAt\"\n  //       order: \"-fields.age\"\n  //     });\n  //   console.log(response.items);\n  //   let pets = this.formatData(response.items);\n  //   let newPets = pets.filter(pet => pet.featured === true);\n  //   let typeDog = pets.filter(pet => pet.type === \"Dog\");\n  //   let typeCat = pets.filter(pet => pet.type === \"Cat\");\n  //   let maxAge = Math.max(...pets.map(item => item.age));\n  //   let minAge = Math.min(...pets.map(item => item.age));\n  //   this.setState({\n  //     pets, \n  //     newPets,\n  //     typeDog,\n  //     typeCat,\n  //     sortedPets: pets,\n  //     loading: false,\n  //     age: maxAge,\n  //     maxAge,\n  //     minAge,\n  //   });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // componentDidMount() {\n  //   this.getData();\n  // }\n  //------------------End of contentful----------\n  //----------------Local Data------------------\n  componentDidMount() {\n    let pets = this.formatData(items);\n    let newPets = pets.filter(pet => pet.featured === true);\n    let typeDog = pets.filter(pet => pet.type === \"Dog\");\n    let typeCat = pets.filter(pet => pet.type === \"Cat\");\n    let maxAge = Math.max(...pets.map(item => item.age));\n    let minAge = Math.min(...pets.map(item => item.age));\n    this.setState({\n      pets,\n      newPets,\n      typeDog,\n      typeCat,\n      sortedPets: pets,\n      loading: false,\n      age: maxAge,\n      maxAge,\n      minAge\n    });\n  } //----------------End of Local Data------------------\n\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let pet = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return pet;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(PetContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getPet: this.getPet,\n        getPetType: this.getPetType,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst PetsConsumer = PetContext.Consumer;\nexport function withPetsConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(PetsConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  };\n}\nexport { PetsProvider, PetsConsumer, PetContext };","map":{"version":3,"sources":["/Users/gautamr2590/Documents/PawPal/PawPal_UIUX/pawpal/src/context.js"],"names":["React","Component","items","PetContext","createContext","PetsProvider","state","pets","sortedPets","newPets","loading","type","age","minAge","maxAge","gender","breakfast","typeDog","typeCat","getPet","id","tempPets","pet","find","getPetType","tempPetType","petType","handleChange","event","value","target","name","setState","filterPets","filter","typeDogTemp","typeCatTemp","componentDidMount","formatData","featured","Math","max","map","item","min","tempItems","sys","images","fields","image","file","url","render","props","children","PetsConsumer","Consumer","withPetsConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport items from \"./data\";\n//import Client from \"./Contentful\";\n\nconst PetContext = React.createContext();\n\nclass PetsProvider extends Component {\n  state = {\n    pets: [],\n    sortedPets: [],\n    newPets: [],\n    loading: true,\n    type: \"all\",\n    age: \"0\",\n    minAge: 0,\n    maxAge: 0,\n    gender: \"all\",\n    breakfast: false,\n    typeDog: [],\n    typeCat: [],\n  };\n  //------------------contentful----------\n    // getData = async () => {\n    //   try {\n    //     let response = await Client.getEntries({\n    //       content_type: \"pawpal1\",\n    //       // order: \"sys.createdAt\"\n    //       order: \"-fields.age\"\n    //     });\n    //   console.log(response.items);\n    //   let pets = this.formatData(response.items);\n    //   let newPets = pets.filter(pet => pet.featured === true);\n    //   let typeDog = pets.filter(pet => pet.type === \"Dog\");\n    //   let typeCat = pets.filter(pet => pet.type === \"Cat\");\n    //   let maxAge = Math.max(...pets.map(item => item.age));\n    //   let minAge = Math.min(...pets.map(item => item.age));\n\n    //   this.setState({\n    //     pets, \n    //     newPets,\n    //     typeDog,\n    //     typeCat,\n    //     sortedPets: pets,\n    //     loading: false,\n    //     age: maxAge,\n    //     maxAge,\n    //     minAge,\n    //   });\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n\n    // componentDidMount() {\n    //   this.getData();\n    // }\n  //------------------End of contentful----------\n\n  //----------------Local Data------------------\n    componentDidMount() {\n       let pets  = this.formatData(items);\n       let newPets = pets.filter(pet => pet.featured === true);\n       let typeDog = pets.filter(pet => pet.type === \"Dog\");\n       let typeCat = pets.filter(pet => pet.type === \"Cat\");\n       let maxAge = Math.max(...pets.map(item => item.age));\n       let minAge = Math.min(...pets.map(item => item.age));\n     this.setState({\n         pets, \n         newPets,\n         typeDog,\n         typeCat,\n         sortedPets: pets,\n         loading: false,\n         age: maxAge,\n         maxAge,\n         minAge,\n       });\n     }\n//----------------End of Local Data------------------\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let pet = { ...item.fields, images, id };\n      return pet;\n    });\n    return tempItems;\n  }\n  getPet = id => {\n    let tempPets = [...this.state.pets];\n    const pet = tempPets.find(pet => pet.id === id);\n    return pet;\n  };\n  getPetType = type => {\n    let tempPetType = [...this.state.pets];\n    const petType = tempPetType.find(pet => pet.type === type);\n    return petType;\n  }\n  handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState(\n       {\n         [name]: value\n       },\n       this.filterPets   \n     );\n  };\n   filterPets = () => {\n     let {\n       pets,\n       gender,\n       age\n     } = this.state;\n      let tempPets = [...pets];\n      if (gender !== \"all\") {\n       tempPets = tempPets.filter(pet => pet.gender === gender);\n      }\n     tempPets = tempPets.filter(pet => pet.age <= age);\n     let typeDogTemp = tempPets.filter(pet => pet.type === \"Dog\");\n     let typeCatTemp = tempPets.filter(pet => pet.type === \"Cat\");\n      this.setState({\n       typeDog: typeDogTemp,\n       typeCat: typeCatTemp\n      });\n   };\n render() {\n    return (\n      <PetContext.Provider\n       value={{\n         ...this.state,\n           getPet: this.getPet,\n           getPetType: this.getPetType,\n           handleChange: this.handleChange\n         }}\n       >\n         {this.props.children}\n       </PetContext.Provider>\n     );\n   }\n}\n\n const PetsConsumer = PetContext.Consumer;\nexport function withPetsConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <PetsConsumer>\n        {value => <Component {...props} context={value} />}\n      </PetsConsumer>\n    );\n  };\n}\n\nexport { PetsProvider, PetsConsumer, PetContext };\n"]},"metadata":{},"sourceType":"module"}